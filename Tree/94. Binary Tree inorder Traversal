#1 Iterative Solution using Stack
public List<Integer> inorderTraversal(TreeNode root) {
    List<Integer> res = new ArrayList<>();
    Stack<TreeNode> s = new Stack<>();
    TreeNode curr = root;
    while(!s.isEmpty() || curr != null) {
        while(curr != null) {
            s.push(curr);
            curr = curr.left;
        }
        curr = s.pop();
        res.add(curr.val);
        curr = curr.right;
    }
}

#2 Recursive Solution without Stack
public List<Integer> inorderTraversal(TreeNode root) {
    List<Integer> res = new ArrayList<>();
    if(root == null) {
        return res;
    }
    helper(root, res);
    return res;
}
public void helper(TreeNode root, List<Integer> res) {
    if(root == null) {
        return;
    }
    helper(root.left);
    res.add(root.val);
    helper(root.right);
}
    
